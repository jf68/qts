__author__ = 'JamesFeng'

# HW 4
# netID = jf698

import random
import math
import numpy as np
import scipy as sp
import pandas as pd
import pandas.io.data
from sklearn import linear_model
#import matplotlib.pyplot as plt
'''
sum = 0
for i in range(0,5):
	B = np.random.normal(0,1,10)	
	sum += B
	print B
print sum
'''

# Problem 3
def call_payoff(S,K):
	return max(0.0, S-K)

def sim_stock_price(S_0,K,T,sigma,mu,r,n):
	S = S_0
	dt = 1.0/n
	norms = np.random.normal(0.0,1.0,n)
	for i in range(1,n):
		S = S * math.exp((r - 0.5*sigma*sigma)*dt + sigma*math.sqrt(dt)*norms[i])
	#return S
	
S_0 = 100.0
K = 100.0
T = 1.0
sigma = 0.2
mu = 0.1
r = 0.0
n = 10

# Problem 1
XLF = pd.read_csv('XLF_T.csv')
XLF = pd.DataFrame(XLF)

XLF['Imb'] = (XLF['bsize'])/(XLF['bsize'] + XLF['asize'])
XLF['mid'] = 0.5*(XLF['bid'] + XLF['ask'])

arr1 = np.array(XLF['mid'])
arr2 = np.zeros(arr1.shape[0])
for i in range(0, arr1.shape[0]):
	if i < (arr1.shape[0]-1000):
		arr2[i] = arr1[i+1000]
XLF['mid1000'] = arr2

XLF = XLF.ix[0:arr1.shape[0] - 1001]

b1up, b1tot, b2up, b2tot, b3up, b3tot, b4up, b4tot, b5up, b5tot, b6up, b6tot, b7up, b7tot, b8up, b8tot, b9up, b9tot, b10up, b10tot = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

arr0 = np.array(XLF['Imb'])
arr1 = np.array(XLF['mid'])
arr2 = np.array(XLF['mid1000'])
for i in range(0,arr0.shape[0]):
	if arr0[i] < 0.1:
		if arr1[i] < arr2[i]:
			b1up += 1
			b1tot += 1
		else:
			b1tot += 1			
	elif arr0[i] < 0.2:
		if arr1[i] < arr2[i]:
			b2up += 1
			b2tot += 1
		else:
			b2tot += 1
	elif arr0[i] < 0.3:
		if arr1[i] < arr2[i]:
			b3up += 1
			b3tot += 1
		else:
			b3tot += 1
	elif arr0[i] < 0.4:
		if arr1[i] < arr2[i]:
			b4up += 1
			b4tot += 1
		else:
			b4tot += 1
	elif arr0[i] < 0.5:
		if arr1[i] < arr2[i]:
			b5up += 1
			b5tot += 1
		else:
			b5tot += 1
	elif arr0[i] < 0.6:
		if arr1[i] < arr2[i]:
			b6up += 1
			b6tot += 1
		else:
			b6tot += 1
	elif arr0[i] < 0.7:
		if arr1[i] < arr2[i]:
			b7up += 1
			b7tot += 1
		else:
			b7tot += 1
	elif arr0[i] < 0.8:
		if arr1[i] < arr2[i]:
			b8up += 1
			b8tot += 1
		else:
			b8tot += 1
	elif arr0[i] < 0.9:
		if arr1[i] < arr2[i]:
			b9up += 1
			b9tot += 1
		else:
			b9tot += 1
	else:
		if arr1[i] < arr2[i]:
			b10up += 1
			b10tot += 1
		else:
			b10tot += 1

p1up = float(b1up)/float(b1tot)
p2up = float(b2up)/float(b2tot)
p3up = float(b3up)/float(b3tot)
p4up = float(b4up)/float(b4tot)
p5up = float(b5up)/float(b5tot)
p6up = float(b6up)/float(b6tot)
p7up = float(b7up)/float(b7tot)
p8up = float(b8up)/float(b8tot)
p9up = float(b9up)/float(b9tot)
p10up = float(b10up)/float(b10tot)

prob = np.array([p1up,p2up,p3up,p4up,p5up,p6up,p7up,p8up,p9up,p10up])
print prob


#plt.show()

# Problem 2
XLF = pd.read_csv('XLF_T.csv')
XLF = pd.DataFrame(XLF)

XLF['Imb'] = (XLF['bsize'])/(XLF['bsize'] + XLF['asize'])
arr = np.array(XLF['Imb'])

price = 0
num = 0
i = 0
while i < arr.shape[0]:
	price += XLF['bid'].ix[i]
	num += 1
	i += 1000

twap = price/float(num)
print twap



price = 0
num = 0
i = 0
while i < arr.shape[0]:
	price += XLF['bid'].ix[i]
	num += 1
	i += 1
	
	
	
