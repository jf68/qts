from selenium import webdriver
from apscheduler.scheduler import Scheduler
import datetime as dt
import sys
import xlsxwriter as excel
import smtplib
import mimetypes
from email.mime.multipart import MIMEMultipart
from email import encoders
from email.message import Message
from email.mime.audio import MIMEAudio
from email.mime.base import MIMEBase
from email.mime.image import MIMEImage
from email.mime.text import MIMEText
import xlsxwriter as excel
#import getpass 

def send_mail(emailto,emailfrom,usr,psw,fileToSend,body,subject):
	"""
	param emailto: str of the email address to be sent to
	param emailfrom: str of the email address that will send the email
	param usr: str of the part of the email address prior to the '@'
	param psw: str of the password for the email address
	param fileToSend: a str containing the name of the file to email
	param body: a str that will compose the body of the email
	param subject: str of the subject of the email
	"""

	msg = MIMEMultipart()
	msg["From"] = emailfrom
	msg["To"] = emailto
	msg["Subject"] = subject
	
	msg.attach(MIMEText(body,'plain'))

	ctype, encoding = mimetypes.guess_type(fileToSend)
	if ctype is None or encoding is not None:
	    ctype = "application/octet-stream"

	maintype, subtype = ctype.split("/", 1)

	if maintype == "text":
	    fp = open(fileToSend)
	    # Note: we should handle calculating the charset
	    attachment = MIMEText(fp.read(), _subtype=subtype)
	    fp.close()
	elif maintype == "image":
	    fp = open(fileToSend, "rb")
	    attachment = MIMEImage(fp.read(), _subtype=subtype)
	    fp.close()
	elif maintype == "audio":
	    fp = open(fileToSend, "rb")
	    attachment = MIMEAudio(fp.read(), _subtype=subtype)
	    fp.close()
	else:
	    fp = open(fileToSend, "rb")
	    attachment = MIMEBase(maintype, subtype)
	    attachment.set_payload(fp.read())
	    fp.close()
	    encoders.encode_base64(attachment)
	attachment.add_header("Content-Disposition", "attachment", filename=fileToSend)
	msg.attach(attachment)

	server = smtplib.SMTP("smtp.gmail.com:587")
	server.starttls()
	server.login(usr,psw)
	server.sendmail(emailfrom, emailto, msg.as_string())
	server.quit()

def get_topten(stock):
	driver = webdriver.Firefox()
	driver.get("https://www.ishares.com/us/")
	qoutebox = driver.find_element_by_xpath(".//*[@id='searchText']")
	qoutebox.send_keys(stock)
	driver.find_element_by_xpath(".//*[@id='submit']").click()
	driver.find_element_by_xpath(".//*[@id='holdingsTabs']/ul/li[2]/a").click()
	driver.find_element_by_xpath(".//*[@id='topHoldingsTable_wrapper']/div[2]/div[2]/a").click()

	wb = excel.Workbook('jf698_ex.xlsx')
	ws = wb.add_worksheet('My Sheet')	
	
	
	for i in range(0,5):
		ws.write(0,i,driver.find_element_by_xpath(".//*[@id='topHoldingsTable_wrapper']/div[1]/div[1]/div/table/thead/tr/th[" + str(i+1) + "]").text)
	
	for j in range(0,10):
		for k in range(0,5):
			ws.write(j+1,k,driver.find_element_by_xpath(".//*[@id='topHoldingsTable']/tbody/tr[" +str(j+1) +"]/td[" +str(k+1)+ "]").text)
	
	wb.close()
	driver.close()

	



if __name__ == '__main__':

	stock = str(raw_input('Stock: '))
	time = str(raw_input('\nTime: '))
	print time
	t = dt.datetime.strptime(time, "%H:%M").time()
	hour = int(t.strftime("%H"))
	minute = int(t.strftime("%M"))
	
	sched = Scheduler()
	sched.start()
	
	
	get_topten(stock)
	subject = 'ORIE 5630 Extra Credit'
	body = 'Michael\n\nPlease see attached my excel file for the extra credit file assignment\n\n--James Feng (jf698)'
	
	sched.add_date_job(send_mail, dt.datetime(2015, 12, 7, hour, minute, 00),['jf698@cornell.edu','cfem.orie.5630.ec@gmail.com','cfem.orie.5630.ec@gmail.com','CFEMBROAD55','jf698_ex.xlsx',body,subject])

	while len(sched.get_jobs()) > 0: 
		pass
